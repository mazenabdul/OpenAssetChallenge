{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazen\\\\Desktop\\\\WebDev\\\\Axomic\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport PostItem from './PostItem';\nimport { useTheme } from '@material-ui/core/styles';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'; //Material UI Table Pagination\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n  const theme = useTheme();\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  }; //Computation of Pagination\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filter Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleBackButtonClick,\n        disabled: page === 0,\n        \"aria-label\": \"previous page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleNextButtonClick,\n        disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n        \"aria-label\": \"next page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\n\nconst Post = ({\n  data\n}) => {\n  _s2();\n\n  const [page, setPage] = React.useState(0);\n  const [postsPerPage, setPostsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setPostsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 20, 30, 50],\n        colSpan: 3,\n        count: data.posts.data.length,\n        rowsPerPage: postsPerPage,\n        page: page,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage,\n        ActionsComponent: TablePaginationActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (postsPerPage > 0 ? data.posts.data.slice(page * postsPerPage, page * postsPerPage + postsPerPage) : null).map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 117\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Post, \"KdxgOjFBuf/VjGPSxVtxPvyFe6g=\");\n\n_c2 = Post;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["C:/Users/mazen/Desktop/WebDev/Axomic/src/components/Post.js"],"names":["React","Fragment","useContext","useEffect","PostItem","useTheme","TablePagination","IconButton","KeyboardArrowLeft","KeyboardArrowRight","TablePaginationActions","props","count","page","rowsPerPage","onChangePage","theme","handleBackButtonClick","event","handleNextButtonClick","direction","Math","ceil","Post","data","setPage","useState","postsPerPage","setPostsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","posts","length","inputProps","native","slice","map","post"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react'\r\nimport PostItem from './PostItem'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\n//Material UI Table Pagination\r\nfunction TablePaginationActions(props) {\r\n\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n  const theme = useTheme();\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  //Computation of Pagination\r\n  return (\r\n    <div>\r\n    <h1>Filter Posts</h1>\r\n    <div className='page'>\r\n     \r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Post = ({data}) => {\r\n \r\n  const [page, setPage] = React.useState(0);\r\n  const [postsPerPage, setPostsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPostsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  \r\n    return (  \r\n      <Fragment>\r\n        <div className='page'>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 20, 30, 50]}\r\n            colSpan={3}\r\n            count={data.posts.data.length}\r\n            rowsPerPage={postsPerPage}\r\n            page={page}\r\n            SelectProps={{\r\n              inputProps: { 'aria-label': 'rows per page' },\r\n              native: true,\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            ActionsComponent={TablePaginationActions}\r\n          />\r\n        </div>\r\n        <div>\r\n          {(postsPerPage > 0\r\n            ? data.posts.data.slice(page * postsPerPage, page * postsPerPage + postsPerPage): null).map((post) => ( <PostItem post={post}/>))}\r\n        </div>\r\n      \r\n          \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}