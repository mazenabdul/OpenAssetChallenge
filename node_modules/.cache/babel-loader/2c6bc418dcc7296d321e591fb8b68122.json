{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazen\\\\Desktop\\\\WebDev\\\\Axomic\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PostItem from './PostItem';\nimport PageContext from '../context/PageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(PageContext); //Query for a single post\n\n  const SINGLE_POST = gql`\n\nquery {\n  posts(pagination: { limit:${state.postCount} }){\n    data{\n      title\n      author{\n        name\n      }\n      comments{\n        body\n      }\n    }\n  }\n} \n`;\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: SINGLE_POST,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }, this);\n      if (error) console.log('Error'); //console.log(data.posts)\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: data.posts.data.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Post, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/mazen/Desktop/WebDev/Axomic/src/components/Post.js"],"names":["React","useContext","gql","Query","PostItem","PageContext","Post","state","SINGLE_POST","postCount","loading","error","data","console","log","posts","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACI,WAAD,CAA5B,CAFiB,CAGjB;;AACF,QAAMG,WAAW,GAAGN,GAAK;AACzB;AACA;AACA,8BAA8BK,KAAK,CAACE,SAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBE,sBACA,QAAC,KAAD;AAAO,IAAA,KAAK,EAAED,WAAd;AAAA,cACQ,CAAC;AAAEE,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA+B;AAC/B,UAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACZ,UAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFqB,CAG/B;;AACA,0BAAO,QAAC,KAAD,CAAO,QAAP;AAAA,kBAEHF,IAAI,CAACG,KAAL,CAAWH,IAAX,CAAgBI,GAAhB,CAAoBC,IAAI,iBAAM,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAA9B;AAFG;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD;AAVP;AAAA;AAAA;AAAA;AAAA,UADA;AAgBD,CArCD;;GAAMX,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport PostItem from './PostItem'\r\nimport PageContext from '../context/PageContext'\r\n\r\n\r\n\r\nconst Post = () => {\r\n\r\n  const { state } = useContext(PageContext)\r\n  //Query for a single post\r\nconst SINGLE_POST = gql `\r\n\r\nquery {\r\n  posts(pagination: { limit:${state.postCount} }){\r\n    data{\r\n      title\r\n      author{\r\n        name\r\n      }\r\n      comments{\r\n        body\r\n      }\r\n    }\r\n  }\r\n} \r\n` \r\n\r\n  return (  \r\n  <Query query={SINGLE_POST}>\r\n        { ({ loading, error, data }) =>  {\r\n          if(loading) return <h4>Loading</h4>\r\n          if(error) console.log('Error')\r\n          //console.log(data.posts)\r\n          return <React.Fragment>\r\n            {\r\n              data.posts.data.map(post => ( <PostItem post={post}/>))\r\n            }\r\n          </React.Fragment> \r\n        }}\r\n       </Query>\r\n      \r\n   \r\n  )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}