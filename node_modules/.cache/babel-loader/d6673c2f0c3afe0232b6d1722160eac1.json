{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazen\\\\Desktop\\\\WebDev\\\\Axomic\\\\src\\\\components\\\\Post.js\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo'; //Query for a single post\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SINGLE_POST = gql`\n\nquery SinglePost {\n  post(postId: 2){\n    title\n  }\n}\n\n`;\n\nconst Post = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Single Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Query, {\n      query: SINGLE_POST,\n      children: ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 30\n        }, this);\n        if (error) console.log('Error');\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/mazen/Desktop/WebDev/Axomic/src/components/Post.js"],"names":["React","gql","Query","SINGLE_POST","Post","loading","error","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB,C,CAEA;;;AACA,MAAMC,WAAW,GAAGF,GAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMG,IAAI,GAAG,MAAM;AACjB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,WAAd;AAAA,gBACI,CAAC;AAAEE,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,KAA+B;AAC/B,YAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACZ,YAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAY,OAAZ;AACVD,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,4BAAO;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AANH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAMH,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\n\r\n//Query for a single post\r\nconst SINGLE_POST = gql `\r\n\r\nquery SinglePost {\r\n  post(postId: 2){\r\n    title\r\n  }\r\n}\r\n\r\n` \r\n\r\nconst Post = () => {\r\n  return (\r\n    <div>\r\n      <h1>Single Post</h1>\r\n      <Query query={SINGLE_POST}>\r\n        { ({ loading, error, data }) =>  {\r\n          if(loading) return <h4>Loading</h4>\r\n          if(error) console.log('Error')\r\n          console.log(data)\r\n          return <h2>{data}</h2>\r\n        }}\r\n      </Query>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}