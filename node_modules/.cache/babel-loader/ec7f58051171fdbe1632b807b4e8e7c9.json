{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazen\\\\Desktop\\\\WebDev\\\\Axomic\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { PageProvider } from './context/PageContext';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider, useQuery } from 'react-apollo';\nimport Home from './Pages/Home';\nimport Post from './components/Post';\nimport Input from './components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://api.graphqlplaceholder.com'\n});\n\nfunction App() {\n  _s();\n\n  //Query for a single post\n  const SINGLE_POST = gql`\n\nquery {\n  posts(pagination: { limit:100 }){\n    data{\n      title\n      author{\n        name\n      }\n      comments{\n        body\n      }\n    }\n  }\n} \n`;\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(SINGLE_POST);\n\n  if (loading) {\n    console.log('Loading');\n  }\n\n  return /*#__PURE__*/_jsxDEV(PageProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Post, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"p6oyfP/Yk4ZuNTXZyHZn/tpJfv0=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mazen/Desktop/WebDev/Axomic/src/App.js"],"names":["React","gql","PageProvider","ApolloClient","ApolloProvider","useQuery","Home","Post","Input","client","uri","App","SINGLE_POST","loading","data","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,cAAzC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC5BO,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX;AACJ,QAAMC,WAAW,GAAGX,GAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBI,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BV,QAAQ,CAACO,WAAD,CAAzC;;AACA,MAAGC,OAAH,EAAW;AACPG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAED,sBAEQ,QAAC,YAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEH;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFR;AAWH;;GAnCQH,G;UAmB4BN,Q;;;KAnB5BM,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag'\n\nimport { PageProvider } from './context/PageContext'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider, useQuery } from 'react-apollo';\n\nimport Home from './Pages/Home';\nimport Post from './components/Post'\nimport Input from './components/Input'\n\nconst client = new ApolloClient({\n    uri: 'https://api.graphqlplaceholder.com'\n});\n\nfunction App() {\n    //Query for a single post\nconst SINGLE_POST = gql `\n\nquery {\n  posts(pagination: { limit:100 }){\n    data{\n      title\n      author{\n        name\n      }\n      comments{\n        body\n      }\n    }\n  }\n} \n` \n    \n    const { loading, data, error } = useQuery(SINGLE_POST)\n    if(loading){\n        console.log('Loading')\n    }\n    \n    return (\n        \n            <PageProvider>\n            <div className='container'>\n            <Input />\n            <Post data={data} />\n            </div>\n            </PageProvider>\n        \n        \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}